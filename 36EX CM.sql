/* 36 EXERCICIOS */

/* 1 EX */
UPDATE debitos SET SITUACAO_DEBITO = 'Atrasado'
WHERE DATAVENCIMENTO < CURRENT_DATE
AND SITUACAO_DEBITO NOT IN ('Negociado', 'Pago');

SELECT * FROM DEBITOS d 

/* 2 EX */
UPDATE debitos SET SITUACAO_DEBITO = 'Pendente'
WHERE DATAVENCIMENTO >= CURRENT_DATE
AND SITUACAO_DEBITO != 'Pago';

SELECT * FROM DEBITOS d 

/* 3 EX */


/* 4 EX */
SELECT NOME, EMAIL, TELEFONE
FROM PESSOA p ;

/* 5 EX */
SELECT NOME, DESCRICAO, PRECO_UNITARIO
FROM PRODUTO p 
WHERE PRECO_UNITARIO > 100;

/* 6 EX */
SELECT DATA_VENDA, VALOR_TOTAL, ID_FUNCIONARIO, ID_FORMA_PAGAMENTO
FROM VENDA v 
WHERE DATA_VENDA = '2023-09-20';  

/* 7 EX */
SELECT p.nome, p.data_nascimento, (CURRENT_DATE - p.data_nascimento) FROM FORNECEDOR f
LEFT JOIN PESSOA p ON p.ID_PESSOA = f.ID_FORNECEDOR
WHERE f.ID_FORNECEDOR IN (SELECT ID_FORNECEDOR FROM PRODUTO p2 WHERE quantidade_estoque IS NULL)

/* 8 EX */
SELECT p.NOME, p.EMAIL, p.TELEFONE, d.DATAVENCIMENTO, d.SITUACAO_DEBITO
FROM cliente c
INNER JOIN pessoa p ON c.ID_PESSOA = p.ID_PESSOA
LEFT JOIN DEBITOS d ON c.ID_CLIENTE = d.ID_CLIENTE
ORDER BY p.NOME;

/* 10 EX */


/* 11 EX */
UPDATE produto SET PRECO_UNITARIO = PRECO_UNITARIO * 1.10
WHERE QUANTIDADE_ESTOQUE < 10;

/* 13 EX */
UPDATE DEBITOS d SET d.SITUACAO_DEBITO = 'Pagos'
WHERE d.SITUACAO_DEBITO = 'Atrasado'
  AND EXISTS (
    SELECT 1
    FROM pagamento p
    WHERE p.ID_DEBITO = d.ID_DEBITO
  );

/* 15 EX */
SELECT * FROM VENDA
WHERE DATA_VENDA BETWEEN '2023-12-01' AND '2024-01-31';

/* 16 EX */
SELECT * FROM PRODUTO p
WHERE QUANTIDADE_ESTOQUE BETWEEN 5 AND 20;

/* 17 EX */
SELECT * FROM PESSOA
WHERE NOME LIKE 'A%';

/* 18 EX */
SELECT p.*
	FROM PRODUTO p 
		LEFT JOIN ITENSVENDA i ON p.ID_PRODUTO = i.ID_VENDA 
			WHERE i.ID_VENDA IS NULL 

/* 19 EX */
SELECT v.*
	FROM VENDA v 
		INNER JOIN PESSOA p ON p.ID_PESSOA = v.ID_PESSOA 
			WHERE p.NOME IN ('Carla Souza', 'Larissa Ferreira')

/* 20 EX */
SELECT 
    p.NOME,
    IF(c.ID_CLIENTE IS NOT NULL AND f.ID_FORNECEDOR IS NOT NULL, 'Cliente e Fornecedor',
       IF(c.ID_CLIENTE IS NOT NULL, 'Cliente', 'Fornecedor')) AS TIPO
FROM 
    PESSOA p
LEFT JOIN 
    CLIENTE c ON p.ID_PESSOA = c.ID_PESSOA
LEFT JOIN 
    FORNECEDOR f ON p.ID_PESSOA = f.ID_PESSOA
WHERE 
    c.ID_CLIENTE IS NOT NULL OR f.ID_FORNECEDOR IS NOT NULL;

/* 21 EX */
SELECT V.*, C.*, FP.DESCRICAO AS FORMA_PAGAMENTO
FROM VENDA V
JOIN CLIENTE C ON V.ID_PESSOA = C.ID_PESSOA
JOIN FORMA_PAGAMENTO FP ON V.ID_FORMA_PAGAMENTO = FP.ID_FORMA_PAGAMENTO;

/* 22 EX */
SELECT V.*, IV.*, P.*
FROM VENDA V
JOIN ITENSVENDA IV ON V.ID_VENDA = IV.ID_VENDA
JOIN PRODUTO P ON IV.ID_PRODUTO = P.ID_PRODUTO
WHERE P.NOME = 'Placa de Captura';

/* 23 EX */


/* 24 EX */
SELECT L.NOME AS NOME_LOGRADOURO,
       B.NOME AS NOME_BAIRRO,
       'PERTENCE A UMA PESSOA' AS STATUS
FROM LOGRADOURO L
JOIN BAIRRO B ON L.ID_BAIRRO = B.ID_BAIRRO
JOIN ENDERECO E ON L.ID_LOGRADOURO = E.ID_LOGRADOURO
WHERE E.ID_PESSOA IS NOT NULL

UNION ALL

SELECT L.NOME AS NOME_LOGRADOURO,
       B.NOME AS NOME_BAIRRO,
       'NÃƒO PERTENCE A NENHUMA PESSOA' AS STATUS
FROM LOGRADOURO L
JOIN BAIRRO B ON L.ID_BAIRRO = B.ID_BAIRRO
LEFT JOIN ENDERECO E ON L.ID_LOGRADOURO = E.ID_LOGRADOURO
WHERE E.ID_PESSOA IS NULL;

/* 25 EX */
SELECT P.*
FROM PRODUTO P
WHERE P.PRECO_UNITARIO > (SELECT AVG(P2.PRECO_UNITARIO) FROM PRODUTO P2);

/* 26 EX */
SELECT DISTINCT C.* 
FROM CLIENTE C
JOIN VENDA V ON C.ID_PESSOA = V.ID_PESSOA
JOIN ENDERECO E ON E.ID_PESSOA = C.ID_PESSOA
JOIN MUNICIPIO M ON E.ID_MUNICIPIO = M.ID_MUNICIPIO
WHERE M.POPULACAO > 1000000;

/* 27 EX */
SELECT F.ID_FORNECEDOR,
       P.NOME AS NOME_FORNECEDOR,
       SUM(IV.QUANTIDADE) AS TOTAL_PRODUTOS_VENDIDOS
FROM FORNECEDOR F
JOIN PRODUTO P ON F.ID_FORNECEDOR = P.ID_FORNECEDOR
JOIN ITENSVENDA IV ON P.ID_PRODUTO = IV.ID_PRODUTO
GROUP BY F.ID_FORNECEDOR, P.NOME;

/* 28 EX */
SELECT C.ID_CLIENTE,
       PE.NOME AS NOME_CLIENTE
FROM CLIENTE C
JOIN HISTORICO_COMPRAS_CLIENTE HCC ON C.ID_CLIENTE = HCC.ID_CLIENTE
JOIN PESSOA PE ON C.ID_PESSOA = PE.ID_PESSOA
WHERE HCC.VALOR_TOTAL > 500
GROUP BY C.ID_CLIENTE, PE.NOME;

/* 29 EX */
SELECT PE.ID_PESSOA,
       PE.NOME,
       E.NUMERO,
       E.COMPLEMENTO,
       E.TIPO_ENDERECO
FROM PESSOA PE
LEFT JOIN ENDERECO E ON PE.ID_PESSOA = E.ID_PESSOA;

/* 30 EX */


/* 31 EX */
SELECT P.ID_PRODUTO,
       P.NOME AS NOME_PRODUTO,
       P.QUANTIDADE_ESTOQUE
FROM PRODUTO P
ORDER BY P.QUANTIDADE_ESTOQUE DESC;

/* 32 EX */
SELECT V.ID_VENDA,''
       V.VALOR_TOTAL
FROM VENDA V
ORDER BY V.VALOR_TOTAL ASC ;

/* 33 EX */


/* 34 EX */


/* 35 EX */


/* 36 EX */
SELECT V.ID_VENDA,
       V.VALOR_TOTAL,
       D.SITUACAO_DEBITO
FROM VENDA V
JOIN DEBITOS D ON V.ID_VENDA = D.ID_VENDA
WHERE D.SITUACAO_DEBITO = 'Negociado';
